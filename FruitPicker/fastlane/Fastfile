# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

# platform :ios do
#   desc "Description of what the lane does"
#   lane :custom_lane do
#     # add actions here: https://docs.fastlane.tools/actions
#   end
# end

platform :ios do
  desc "Run tests"
  lane :tests do
    run_tests(
      scheme:  "FruitPicker",
      # Must put the (XX.X) version number after the device name! Bug.
      device: "[E *] [iOS 18] iPhone 13 Pro (390x844) [SS 6.1''] (18.3)"
    )
  end
end

platform :ios do
  desc "Beta testing"
  lane :beta do
    
    # Use the environment variables to connect
    app_store_connect_api_key()
    
    # Fetch and increment the latest used build number temporarily
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "FruitPicker.xcodeproj"
    )
    
    # Code sign syncing - need to upload certs to github repo
    # sync_code_signing(type: "appstore")    # see code signing guide for more information
    
    # Use this instead:
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh
    
    # Build
    build_app(scheme: "FruitPicker")
    
    # Upload
    upload_to_testflight
        
    # Cleanup
    clean_build_artifacts
    
    # clean_build_artifacts above does this now too - so don't need:
    # puts "Cleaning up signing-releated files afterwards"
    # Dir.chdir("..") do
    #   file_patterns = ['*.mobileprovision', '*.cer']
    #   file_patterns.each do |p|
    #     Dir.glob(p) do |f|
    #       puts "Removing file: #{f}"
    #       File.delete(f)
    #     end
    #   end
    # end
    
    # Notify people
    # slack(message: "Successfully distributed a new beta build")
  end
end


